networks:
  axpe_cluster_network:
    driver: bridge

services:
  axpe-cluster-postgres:
    image: "postgres:13.7"
    container_name: axpe-cluster-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pwd}
      - POSTGRES_USER=${POSTGRES_USER:-dev}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - axpe_cluster_postgresql_data_vol:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d/:ro
    networks:
      - axpe_cluster_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "dev"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  axpe-cluster-pgadmin:
    image: "dpage/pgadmin4:6.12"
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
        PGADMIN_LISTEN_PORT: 5050
    ports:
        - "5050:5050"
    volumes:
        - axpe_cluster_pgadmin:/var/lib/pgadmin
    depends_on:
        - axpe-cluster-postgres
    networks:
      - axpe_cluster_network
  jaeger:
      image: jaegertracing/all-in-one:1.21
      ports:
        - 8087:80
      networks:
        - axpe_cluster_network
      restart: always
  #######################################
  # keycloack
  #######################################
  keycloak:
    container_name: axpe-keycloak
    image: jboss/keycloak
    environment:
      DB_VENDOR: "POSTGRES"
      DB_ADDR: axpe-cluster-postgres
      DB_PORT: 5432
      DB_DATABASE: db_keycloak
      DB_USER: keycloak
      DB_PASSWORD: admin
      TZ: Europe/Madrid
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8086:8080"
    depends_on:
      - axpe-cluster-postgres
    restart: always
    networks:
      - axpe_cluster_network
    
  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:latest
    command:
      "kong migrations bootstrap"
    profiles: ["database"]
    networks:
      - axpe_cluster_network
    restart: on-failure
    environment:
      KONG_DATABASE: ${KONG_DATABASE:-off}
      KONG_PG_HOST: axpe-cluster-postgres
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: konga_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    links:
      - axpe-cluster-postgres
    depends_on:
      - axpe-cluster-postgres
      
  kong-migrations-up:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations up && kong migrations finish
    profiles: ["database"]
    depends_on:
      - axpe-cluster-postgres
    environment:
      KONG_DATABASE: ${KONG_DATABASE:-off}
      KONG_PG_HOST: axpe-cluster-postgres
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: konga_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - axpe_cluster_network
    restart: on-failure
  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "${KONG_USER:-kong}"
    environment:
      KONG_DATABASE: ${KONG_DATABASE:-off}
      KONG_PG_HOST: axpe-cluster-postgres
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: konga_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    networks:
      - axpe_cluster_network
    ports:
      # The following two environment variables default to an insecure value (0.0.0.0)
      # according to the CIS Security test.
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      # Making them mandatory but undefined, like so would be backwards-breaking:
      # - "${KONG_INBOUND_PROXY_LISTEN?Missing inbound proxy host}:8000:8000/tcp"
      # - "${KONG_INBOUND_SSL_PROXY_LISTEN?Missing inbound proxy ssl host}:8443:8443/tcp"
      # Alternative is deactivating check 5.13 in the security bench, if we consider Kong's own config to be enough security here

      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges
  #######################################
  # Konga: The API Gateway
  #######################################
  konga:
    image: pantsel/konga:next
    restart: always
    networks:
      - axpe_cluster_network
    links:
      - kong:kong
    environment:
      NODE_ENV: production<
    depends_on:
      - axpe-cluster-postgres
    ports:
      - "1337:1337"
  #######################################
  # zookeeper 
  #######################################
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - axpe_cluster_network
  
  #######################################
  # kafka 
  #######################################
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - axpe_cluster_network
    
volumes:
  axpe_cluster_postgresql_data_vol:
  axpe_cluster_pgadmin:
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs